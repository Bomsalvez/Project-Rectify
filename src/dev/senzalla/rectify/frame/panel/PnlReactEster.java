package dev.senzalla.rectify.frame.panel;

import dev.senzalla.rectify.entitys.LabTank;
import dev.senzalla.rectify.entitys.ReactEster;
import dev.senzalla.rectify.entitys.Tank;
import dev.senzalla.rectify.frame.FrmEster;
import dev.senzalla.rectify.request.RequestReactEster;
import dev.senzalla.rectify.treatments.NumberField;
import dev.senzalla.rectify.treatments.TreatmentLabTank;
import dev.senzalla.theme.TreatmentTheme;

import javax.swing.*;
import java.sql.Time;
import java.util.Date;

/**
 * @author Bomsalvez Freitas
 * @e-mail bomsalvez@gmail.com
 * @github github.com/Bomsalvez
 */
public class PnlReactEster extends javax.swing.JPanel {

    private final FrmEster ester;

    /**
     * Creates new form PnlReactEster
     *
     * @param ester
     */
    public PnlReactEster(FrmEster ester) {
        initComponents();
        TreatmentTheme.initTheme(pnlReact);
        new TreatmentLabTank().showComboBox(cbxEsterReactLabStart);
        new TreatmentLabTank().showComboBox(cbxEsterReactLabFinal);
        this.ester = ester;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlReact = new javax.swing.JPanel();
        lblEsterReactDt = new javax.swing.JLabel();
        dtcReact = new com.toedter.calendar.JDateChooser();
        lblEsterReactHrStart = new javax.swing.JLabel();
        txtEsterReactHrStart = new javax.swing.JFormattedTextField();
        txtEsterReactSulfuric = new javax.swing.JFormattedTextField();
        lblEsterReactSulfuric = new javax.swing.JLabel();
        cbxEsterReactLabStart = new javax.swing.JComboBox<>();
        lblEsterReactLabStart = new javax.swing.JLabel();
        lblEsterReactPure = new javax.swing.JLabel();
        txtEsterReactPure = new javax.swing.JFormattedTextField();
        lblEsterReactRecover = new javax.swing.JLabel();
        txtEsterReactRecover = new javax.swing.JFormattedTextField();
        cbxEsterReactLabFinal = new javax.swing.JComboBox<>();
        lblEsterReactLabFinal = new javax.swing.JLabel();
        txtEsterReactHrFinal = new javax.swing.JFormattedTextField();
        lblEsterReactHrFinal = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(550, 174));
        setMinimumSize(new java.awt.Dimension(550, 174));
        setPreferredSize(new java.awt.Dimension(550, 174));

        lblEsterReactDt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEsterReactDt.setText("Data");

        dtcReact.setDateFormatString("dd/MM/yyyy");

        lblEsterReactHrStart.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEsterReactHrStart.setText("Hora Inicial");

        try {
            txtEsterReactHrStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtEsterReactHrStart.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEsterReactHrStart.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtEsterReactHrStart.setPreferredSize(new java.awt.Dimension(120, 27));

        txtEsterReactSulfuric.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtEsterReactSulfuric.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtEsterReactSulfuric.setPreferredSize(new java.awt.Dimension(120, 27));
        txtEsterReactSulfuric.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEsterReactSulfuricKeyTyped(evt);
            }
        });

        lblEsterReactSulfuric.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEsterReactSulfuric.setText("Sufurico");

        cbxEsterReactLabStart.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cbxEsterReactLabStart.setPreferredSize(new java.awt.Dimension(120, 27));
        cbxEsterReactLabStart.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxEsterReactLabStartFocusGained(evt);
            }
        });

        lblEsterReactLabStart.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEsterReactLabStart.setText("Cod Analise");

        lblEsterReactPure.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEsterReactPure.setText("Metanol Puro");

        txtEsterReactPure.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtEsterReactPure.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtEsterReactPure.setPreferredSize(new java.awt.Dimension(120, 27));
        txtEsterReactPure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEsterReactPureKeyTyped(evt);
            }
        });

        lblEsterReactRecover.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEsterReactRecover.setText("Metanol Recuperado");

        txtEsterReactRecover.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtEsterReactRecover.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtEsterReactRecover.setPreferredSize(new java.awt.Dimension(120, 27));
        txtEsterReactRecover.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEsterReactRecoverKeyTyped(evt);
            }
        });

        cbxEsterReactLabFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cbxEsterReactLabFinal.setPreferredSize(new java.awt.Dimension(120, 27));

        lblEsterReactLabFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEsterReactLabFinal.setText("Cod Analise Final");

        try {
            txtEsterReactHrFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtEsterReactHrFinal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEsterReactHrFinal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtEsterReactHrFinal.setPreferredSize(new java.awt.Dimension(120, 27));

        lblEsterReactHrFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEsterReactHrFinal.setText("Hora Final");

        javax.swing.GroupLayout pnlReactLayout = new javax.swing.GroupLayout(pnlReact);
        pnlReact.setLayout(pnlReactLayout);
        pnlReactLayout.setHorizontalGroup(
                pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlReactLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblEsterReactHrFinal)
                                        .addComponent(lblEsterReactPure)
                                        .addComponent(lblEsterReactLabStart)
                                        .addComponent(lblEsterReactDt))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pnlReactLayout.createSequentialGroup()
                                                .addComponent(txtEsterReactHrFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblEsterReactLabFinal))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlReactLayout.createSequentialGroup()
                                                .addComponent(dtcReact, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblEsterReactHrStart))
                                        .addGroup(pnlReactLayout.createSequentialGroup()
                                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(cbxEsterReactLabStart, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txtEsterReactPure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblEsterReactRecover, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(lblEsterReactSulfuric, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtEsterReactHrStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtEsterReactSulfuric, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtEsterReactRecover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbxEsterReactLabFinal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlReactLayout.setVerticalGroup(
                pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlReactLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtEsterReactHrStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblEsterReactHrStart)
                                        .addComponent(lblEsterReactDt)
                                        .addComponent(dtcReact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEsterReactLabStart)
                                        .addComponent(cbxEsterReactLabStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblEsterReactSulfuric)
                                        .addComponent(txtEsterReactSulfuric, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEsterReactPure)
                                        .addComponent(txtEsterReactPure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblEsterReactRecover)
                                        .addComponent(txtEsterReactRecover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEsterReactHrFinal)
                                        .addComponent(txtEsterReactHrFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblEsterReactLabFinal)
                                        .addComponent(cbxEsterReactLabFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlReact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlReact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtEsterReactSulfuricKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEsterReactSulfuricKeyTyped
        NumberField.txtNumberInt(evt);
    }//GEN-LAST:event_txtEsterReactSulfuricKeyTyped

    private void txtEsterReactPureKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEsterReactPureKeyTyped
        NumberField.txtNumberInt(evt);
    }//GEN-LAST:event_txtEsterReactPureKeyTyped

    private void txtEsterReactRecoverKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEsterReactRecoverKeyTyped
        NumberField.txtNumberInt(evt);
    }//GEN-LAST:event_txtEsterReactRecoverKeyTyped

    private void cbxEsterReactLabStartFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxEsterReactLabStartFocusGained
        Tank tank = ester.getTank();
        if (tank != null) {
            LabTank labTank = new LabTank();
            labTank.setTank(tank);
            new TreatmentLabTank().showComboBox(cbxEsterReactLabStart, labTank);
            new TreatmentLabTank().showComboBox(cbxEsterReactLabFinal, labTank);
        }
    }//GEN-LAST:event_cbxEsterReactLabStartFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> cbxEsterReactLabFinal;
    private javax.swing.JComboBox<Object> cbxEsterReactLabStart;
    private com.toedter.calendar.JDateChooser dtcReact;
    private javax.swing.JLabel lblEsterReactDt;
    private javax.swing.JLabel lblEsterReactHrFinal;
    private javax.swing.JLabel lblEsterReactHrStart;
    private javax.swing.JLabel lblEsterReactLabFinal;
    private javax.swing.JLabel lblEsterReactLabStart;
    private javax.swing.JLabel lblEsterReactPure;
    private javax.swing.JLabel lblEsterReactRecover;
    private javax.swing.JLabel lblEsterReactSulfuric;
    private javax.swing.JPanel pnlReact;
    private javax.swing.JFormattedTextField txtEsterReactHrFinal;
    private javax.swing.JFormattedTextField txtEsterReactHrStart;
    private javax.swing.JFormattedTextField txtEsterReactPure;
    private javax.swing.JFormattedTextField txtEsterReactRecover;
    private javax.swing.JFormattedTextField txtEsterReactSulfuric;
    // End of variables declaration//GEN-END:variables

    public JPanel getPanel() {
        return pnlReact;
    }

    public Date getDate() {
        return dtcReact.getDate();
    }

    public void save() {
        ReactEster reactEster = new ReactEster();
        reactEster.setSulfuricRctEster(Integer.parseInt(txtEsterReactSulfuric.getText()));
        reactEster.setRecoverRctEster(Integer.parseInt(txtEsterReactRecover.getText()));
        reactEster.setPureRctEster(Integer.parseInt(txtEsterReactPure.getText()));
        reactEster.setHrStartRctEster(Time.valueOf(txtEsterReactHrStart.getText()));
        reactEster.setHrFinalRctEster(Time.valueOf(txtEsterReactHrFinal.getText()));
        reactEster.setFkLabStartRctEster((LabTank) cbxEsterReactLabStart.getSelectedItem());
        reactEster.setFkLabFinalRctEster((LabTank) cbxEsterReactLabFinal.getSelectedItem());
        reactEster.setDtRctEster(dtcReact.getDate());
        new RequestReactEster().insert(reactEster);
    }
}
