package dev.senzalla.rectify.frame.panel;

import dev.senzalla.rectify.entitys.MatterMake;
import dev.senzalla.rectify.entitys.Product;
import dev.senzalla.rectify.request.MatterEsterRequest;
import dev.senzalla.rectify.request.MatterBiodieselRequest;
import dev.senzalla.rectify.treatments.NumberField;
import dev.senzalla.rectify.treatments.PnlMatterTreatment;
import dev.senzalla.rectify.treatments.ProductTreatment;
import dev.senzalla.theme.TreatmentTheme;

import javax.swing.*;

/**
 * @author Bomsalvez Freitas
 * @e-mail bomsalvez@gmail.com
 * @github github.com/Bomsalvez
 */
public class MatterPanel extends javax.swing.JPanel {

    private JFormattedTextField txtTransAmount;
    private int count;
    private boolean send = false;

    /**
     * Creates new form PnlMatterEster
     */
    public MatterPanel() {
        initComponents();
        TreatmentTheme.initTheme(pnlMatter);
    }

    public MatterPanel(JFormattedTextField txtTransAmount, int count) {
        initComponents();
        TreatmentTheme.initTheme(pnlMatter);
        ProductTreatment.initComboBox(cbxProduct);
        this.txtTransAmount = txtTransAmount;
        this.count = count;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMatter = new javax.swing.JPanel();
        lblProduct = new javax.swing.JLabel();
        cbxProduct = new javax.swing.JComboBox<>();
        lblLiter = new javax.swing.JLabel();
        txtLiter = new javax.swing.JFormattedTextField();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(700, 60));
        setMinimumSize(new java.awt.Dimension(700, 60));
        setPreferredSize(new java.awt.Dimension(700, 60));

        pnlMatter.setMaximumSize(new java.awt.Dimension(698, 58));
        pnlMatter.setMinimumSize(new java.awt.Dimension(698, 58));
        pnlMatter.setPreferredSize(new java.awt.Dimension(698, 58));

        lblProduct.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblProduct.setText("Produto");

        cbxProduct.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N

        lblLiter.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblLiter.setText("Litros");

        txtLiter.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtLiter.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtLiter.setPreferredSize(new java.awt.Dimension(120, 32));
        txtLiter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLiterFocusLost(evt);
            }
        });
        txtLiter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLiterKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlMatterLayout = new javax.swing.GroupLayout(pnlMatter);
        pnlMatter.setLayout(pnlMatterLayout);
        pnlMatterLayout.setHorizontalGroup(
            pnlMatterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMatterLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113)
                .addComponent(lblLiter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLiter, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMatterLayout.setVerticalGroup(
            pnlMatterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMatterLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnlMatterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProduct)
                    .addComponent(lblLiter)
                    .addComponent(txtLiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMatter, javax.swing.GroupLayout.PREFERRED_SIZE, 696, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMatter, javax.swing.GroupLayout.PREFERRED_SIZE, 56, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtLiterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLiterFocusLost
        String txt = txtLiter.getText().equals("") ? "0" : txtLiter.getText();
        txtLiter.setText(txt);
        if (send) {
            new PnlMatterTreatment().editLitters(Integer.parseInt(txtLiter.getText()), count);
        } else {
            new PnlMatterTreatment().sumLitters(Integer.parseInt(txtLiter.getText()));
        }
        txtTransAmount.setText(String.valueOf(PnlMatterTreatment.getLitters()));
        send = true;
    }//GEN-LAST:event_txtLiterFocusLost

    private void txtLiterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLiterKeyTyped
        NumberField.txtNumberInt(evt);
    }//GEN-LAST:event_txtLiterKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> cbxProduct;
    private javax.swing.JLabel lblLiter;
    private javax.swing.JLabel lblProduct;
    private javax.swing.JPanel pnlMatter;
    private javax.swing.JFormattedTextField txtLiter;
    // End of variables declaration//GEN-END:variables

    public void minusLitters() {
        if (!txtLiter.getText().equals("")) {
            new PnlMatterTreatment().minusLitters(count);
            txtTransAmount.setText(String.valueOf(PnlMatterTreatment.getLitters()));
        }
    }

    public JPanel getPanel() {
        return pnlMatter;
    }

    public void saveEster() {
        new MatterEsterRequest().insert(getMatter());
    }


    public void saveMatter() {
        new MatterBiodieselRequest().insert(getMatter());
    }

    private MatterMake getMatter() {
        MatterMake matterMake = new MatterMake();
        matterMake.setProduct((Product) cbxProduct.getSelectedItem());
        matterMake.setLiterMatterMake(Integer.parseInt(txtLiter.getText()));
        return matterMake;
    }
}
