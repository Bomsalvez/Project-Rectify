package dev.senzalla.rectify.frame.panel;

import dev.senzalla.rectify.entitys.AnalyzeTank;
import dev.senzalla.rectify.entitys.Tank;
import dev.senzalla.rectify.frame.FrmEster;
import dev.senzalla.rectify.treatments.*;
import dev.senzalla.theme.TreatmentTheme;

import javax.swing.*;
import java.util.Date;

/**
 * @author Bomsalvez Freitas
 * @e-mail bomsalvez@gmail.com
 * @github github.com/Bomsalvez
 */
public class ReactionEsterPanel extends javax.swing.JPanel {

    private final FrmEster ester;

    /**
     * Creates new form PnlReactEster
     *
     * @param ester
     */
    public ReactionEsterPanel(FrmEster ester) {
        initComponents();
        TreatmentTheme.initTheme(pnlReact);
        AnalyzeTankTreatment.initComboBox(cbxAnalyzeTankInitial, null);
        AnalyzeTankTreatment.initComboBox(cbxAnalyzeTankFinal, null);
        this.ester = ester;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlReact = new javax.swing.JPanel();
        lblDate = new javax.swing.JLabel();
        dtcDate = new com.toedter.calendar.JDateChooser();
        lblTimeInitial = new javax.swing.JLabel();
        txtTimeInitial = new javax.swing.JFormattedTextField();
        lblAnalyzeInitial = new javax.swing.JLabel();
        cbxAnalyzeTankInitial = new javax.swing.JComboBox<>();
        lblSulfuric = new javax.swing.JLabel();
        txtSulfuric = new javax.swing.JFormattedTextField();
        lblMethanolPure = new javax.swing.JLabel();
        txtMethanolPure = new javax.swing.JFormattedTextField();
        lblMethanolRecover = new javax.swing.JLabel();
        txtMethanolRecover = new javax.swing.JFormattedTextField();
        lblTimeFinal = new javax.swing.JLabel();
        txtTimeFinal = new javax.swing.JFormattedTextField();
        lblAnalyzeFinal = new javax.swing.JLabel();
        cbxAnalyzeTankFinal = new javax.swing.JComboBox<>();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(550, 174));
        setMinimumSize(new java.awt.Dimension(550, 174));
        setPreferredSize(new java.awt.Dimension(550, 174));

        lblDate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDate.setText("Data");

        dtcDate.setDateFormatString("dd/MM/yyyy");

        lblTimeInitial.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTimeInitial.setText("Hora Inicial");

        try {
            txtTimeInitial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTimeInitial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTimeInitial.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTimeInitial.setPreferredSize(new java.awt.Dimension(120, 27));

        lblAnalyzeInitial.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAnalyzeInitial.setText("Cod Analise");

        cbxAnalyzeTankInitial.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cbxAnalyzeTankInitial.setPreferredSize(new java.awt.Dimension(120, 27));
        cbxAnalyzeTankInitial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxAnalyzeTankInitialFocusGained(evt);
            }
        });

        lblSulfuric.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblSulfuric.setText("Sufurico");

        txtSulfuric.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtSulfuric.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtSulfuric.setPreferredSize(new java.awt.Dimension(120, 27));
        txtSulfuric.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSulfuricKeyTyped(evt);
            }
        });

        lblMethanolPure.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblMethanolPure.setText("Metanol Puro");

        txtMethanolPure.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtMethanolPure.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtMethanolPure.setPreferredSize(new java.awt.Dimension(120, 27));
        txtMethanolPure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMethanolPureKeyTyped(evt);
            }
        });

        lblMethanolRecover.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblMethanolRecover.setText("Metanol Recuperado");

        txtMethanolRecover.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtMethanolRecover.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtMethanolRecover.setPreferredSize(new java.awt.Dimension(120, 27));
        txtMethanolRecover.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMethanolRecoverKeyTyped(evt);
            }
        });

        lblTimeFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTimeFinal.setText("Hora Final");

        try {
            txtTimeFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTimeFinal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTimeFinal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTimeFinal.setPreferredSize(new java.awt.Dimension(120, 27));

        lblAnalyzeFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAnalyzeFinal.setText("Cod Analise Final");

        cbxAnalyzeTankFinal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cbxAnalyzeTankFinal.setPreferredSize(new java.awt.Dimension(120, 27));

        javax.swing.GroupLayout pnlReactLayout = new javax.swing.GroupLayout(pnlReact);
        pnlReact.setLayout(pnlReactLayout);
        pnlReactLayout.setHorizontalGroup(
            pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReactLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTimeFinal)
                    .addComponent(lblMethanolPure)
                    .addComponent(lblAnalyzeInitial)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlReactLayout.createSequentialGroup()
                        .addComponent(txtTimeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblAnalyzeFinal))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlReactLayout.createSequentialGroup()
                        .addComponent(dtcDate, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTimeInitial))
                    .addGroup(pnlReactLayout.createSequentialGroup()
                        .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbxAnalyzeTankInitial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMethanolPure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMethanolRecover, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblSulfuric, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTimeInitial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSulfuric, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMethanolRecover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxAnalyzeTankFinal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlReactLayout.setVerticalGroup(
            pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReactLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTimeInitial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeInitial)
                    .addComponent(lblDate)
                    .addComponent(dtcDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAnalyzeInitial)
                    .addComponent(cbxAnalyzeTankInitial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSulfuric)
                    .addComponent(txtSulfuric, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMethanolPure)
                    .addComponent(txtMethanolPure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMethanolRecover)
                    .addComponent(txtMethanolRecover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReactLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimeFinal)
                    .addComponent(txtTimeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAnalyzeFinal)
                    .addComponent(cbxAnalyzeTankFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlReact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlReact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSulfuricKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSulfuricKeyTyped
        NumberField.txtNumberInt(evt);
    }//GEN-LAST:event_txtSulfuricKeyTyped

    private void txtMethanolPureKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMethanolPureKeyTyped
        NumberField.txtNumberInt(evt);
    }//GEN-LAST:event_txtMethanolPureKeyTyped

    private void txtMethanolRecoverKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMethanolRecoverKeyTyped
        NumberField.txtNumberInt(evt);
    }//GEN-LAST:event_txtMethanolRecoverKeyTyped

    private void cbxAnalyzeTankInitialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxAnalyzeTankInitialFocusGained
        Tank tank = ester.getTank();
        if (tank != null) {
            AnalyzeTank analyzeTank = new AnalyzeTank();
            analyzeTank.setTank(tank);
            AnalyzeTankTreatment.initComboBox(cbxAnalyzeTankInitial, analyzeTank);
            AnalyzeTankTreatment.initComboBox(cbxAnalyzeTankFinal, analyzeTank);
        }
    }//GEN-LAST:event_cbxAnalyzeTankInitialFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> cbxAnalyzeTankFinal;
    private javax.swing.JComboBox<Object> cbxAnalyzeTankInitial;
    private com.toedter.calendar.JDateChooser dtcDate;
    private javax.swing.JLabel lblAnalyzeFinal;
    private javax.swing.JLabel lblAnalyzeInitial;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblMethanolPure;
    private javax.swing.JLabel lblMethanolRecover;
    private javax.swing.JLabel lblSulfuric;
    private javax.swing.JLabel lblTimeFinal;
    private javax.swing.JLabel lblTimeInitial;
    private javax.swing.JPanel pnlReact;
    private javax.swing.JFormattedTextField txtMethanolPure;
    private javax.swing.JFormattedTextField txtMethanolRecover;
    private javax.swing.JFormattedTextField txtSulfuric;
    private javax.swing.JFormattedTextField txtTimeFinal;
    private javax.swing.JFormattedTextField txtTimeInitial;
    // End of variables declaration//GEN-END:variables

    public JPanel getNamePanel() {
        return pnlReact;
    }

    public Date getDate() {
        return dtcDate.getDate();
    }

    public boolean checkReact() {
        return TxtTreatment.isTextFieldEmpty(pnlReact)
                || ComboBoxTreatment.isCbxEmpty(pnlReact)
                || DateChooserTreatment.isDateChooserNull(pnlReact);
    }

    public void save() {
        new ReactionEsterTreatment().saveReact(
                txtSulfuric.getText(),
                txtMethanolRecover.getText(),
                txtMethanolPure.getText(),
                txtTimeInitial.getText(),
                txtTimeFinal.getText(),
                (AnalyzeTank) cbxAnalyzeTankInitial.getSelectedItem(),
                (AnalyzeTank) cbxAnalyzeTankFinal.getSelectedItem(),
                dtcDate.getDate()
        );
    }
}
